import { NextRequest } from "next/server";

export async function POST(request: NextRequest) {
  try {
    const formData = await request.formData();
    const file = formData.get("file") as File;

    if (!file) {
      return Response.json(
        { success: false, error: "Nenhum arquivo enviado" },
        { status: 400 },
      );
    }

    const arrayBuffer = await file.arrayBuffer();
    const buffer = Buffer.from(arrayBuffer);

    // Tentar extrair texto b√°sico do PDF
    try {
      // Converter para string e tentar encontrar texto simples
      const textContent = buffer.toString("utf8");

      // Filtrar apenas caracteres leg√≠veis
      const readableText = textContent
        .replace(/[^\x20-\x7E\u00C0-\u017F\u0100-\u024F]/g, " ") // Manter apenas caracteres leg√≠veis
        .replace(/\s+/g, " ")
        .trim();

      if (readableText && readableText.length > 100) {
        return Response.json({
          success: true,
          text: `CONTE√öDO EXTRA√çDO (m√©todo b√°sico):\n\n${readableText.substring(0, 5000)}`, // Limitar a 5000 caracteres
          method: "basic",
        });
      }
    } catch (basicError) {
      console.error("Erro na extra√ß√£o b√°sica:", basicError);
    }

    // Se falhar, retornar mensagem informativa
    return Response.json({
      success: true,
      text: `‚ö†Ô∏è PDF RECEBIDO MAS N√ÉO FOI POSS√çVEL EXTRAIR TEXTO

ARQUIVO: ${file.name}
TAMANHO: ${Math.round(file.size / 1024)}KB

MOTIVOS POSS√çVEIS:
‚Ä¢ PDF √© composto principalmente por imagens
‚Ä¢ PDF tem prote√ß√£o contra extra√ß√£o de texto
‚Ä¢ PDF usa codifica√ß√£o especial

SOLU√á√ïES IMEDIATAS:
1. ‚úÖ WORD/GOOGLE DOCS:
   ‚Ä¢ Abra o PDF no Word ou Google Docs
   ‚Ä¢ Salve como .DOCX
   ‚Ä¢ Anexe o arquivo .DOCX

2. ‚úÖ COPIAR E COLAR:
   ‚Ä¢ Selecione todo o texto do PDF
   ‚Ä¢ Cole em um arquivo .TXT
   ‚Ä¢ Anexe o arquivo .TXT

3. ‚úÖ OCR ONLINE:
   ‚Ä¢ Use sites como i2pdf.com ou pdf24.org
   ‚Ä¢ Converta PDF para texto
   ‚Ä¢ Copie o resultado

üí° Arquivos .DOCX e .TXT funcionam 100% das vezes!`,
      method: "fallback",
    });
  } catch (error) {
    console.error("Erro no processamento de PDF:", error);
    return Response.json(
      {
        success: false,
        error: `Erro no servidor: ${error}`,
        text: `‚ùå ERRO NO PROCESSAMENTO DO PDF

Ocorreu um erro t√©cnico no servidor ao processar o PDF.

SOLU√á√ïES ALTERNATIVAS:
1. ‚úÖ Converta o PDF para .DOCX
2. ‚úÖ Extraia o texto para arquivo .TXT
3. ‚úÖ Use ferramenta online de convers√£o

O sistema funciona perfeitamente com .DOCX e .TXT!`,
      },
      { status: 500 },
    );
  }
}
